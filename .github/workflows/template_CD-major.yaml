name: Continuous Deployment (post compatibility check)

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  publish_draft_major:
    runs-on: ubuntu-latest

    outputs:
      VERSION: ${{ steps.get_draft.outputs.tag_name }}

    steps:
      - name: Get latest draft release
        id: get_draft
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({ owner, repo, per_page: 10 });
            const draft = releases.data.find(r => r.draft);
            if (!draft) {
              core.setFailed('Kein Draft-Release gefunden – Abbruch.');
            } else {
              core.info(`Draft Release Version: ${draft.tag_name}`);
              core.setOutput('release_id', draft.id);
              core.setOutput('tag_name', draft.tag_name);
            }

      - name: Publish draft release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const releaseId = parseInt('${{ steps.get_draft.outputs.release_id }}', 10);
            console.log(`Veröffentliche Release ${{ steps.get_draft.outputs.tag_name }}`);
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
              draft: false
            });

  docker_build_and_push:
    uses: Moritz010902/test_devops/.github/workflows/docker-build-and-push.yaml@main
    needs: publish_draft_major
    with:
      version: ${{ needs.publish_draft_major.outputs.VERSION }}